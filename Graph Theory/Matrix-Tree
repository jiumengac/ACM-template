G的度数矩阵D[G]是一个n*n的矩阵，满足：当i≠j时,dij=0；当i=j时，dij等于vi的度数
G的邻接矩阵A[G]也是一个n*n的矩阵， 满足：如果vi、vj之间有边直接相连，则aij=1，否则为0
我们定义G的Kirchhoff矩阵(也称为拉普拉斯算子)C[G]为C[G]=D[G]-A[G]，
Matrix-Tree定理：G的所有不同的生成树的个数等于其Kirchhoff矩阵C[G]任何一个n-1阶主子式的行列式的绝对值。
所谓n-1阶主子式，就是对于r(1≤r≤n)，将C[G]的第r行、第r列同时去掉后得到的新矩阵，用Cr[G]表示。
//O(n^3)
ll D[N],A[N][N];
ll solve(int n)
{
    ll ans=1;
    for(int i=1;i<n;i++)
    {
        for(int j=i+1;j<n;j++)
        {
            while(A[j][i]){
                ll t=A[i][i]/A[j][i];
                for(int k=i;k<n;k++)
                    A[i][k]-=(A[j][k]*t);
                for(int k=i;k<n;k++)
                    swap(A[i][k],A[j][k]);
                ans=-ans;
            }
        }
        if(A[i][i]==0)return 0;
        ans*=A[i][i];
    }
    if(ans<0)ans=-ans;
    return ans;
}
int main()
{
    int n,k,m;
    while(~scanf("%d%d%d",&n,&m,&k)){
        for(int i=1;i<=n;i++)
        {
            D[i]=A[i][i]=0;
            for(int j=i+1;j<=n;j++)
                A[i][j]=A[j][i]=1;
        }
        while(m--){
            int a,b;
            scanf("%d%d",&a,&b);
            A[a][b]=A[b][a]=0;
        }
        for(int i=1;i<=n;i++)
            for(int j=1+i;j<=n;j++)
                if(A[i][j])
                   D[i]++,D[j]++;
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=n;j++)
            {
                if(i==j)A[i][j]=D[i];
                else A[i][j]=-A[i][j];
            }
        }
        ll res=solve(n);
        printf("%lld\n",res);
    }
