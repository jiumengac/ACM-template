//预处理O(n),单次询问O(sqrt(n))
int mu[N],prime[N],sum[N];
bool mark[N];
int cnt;
void init()
{
    mu[1]=1;
    cnt=0;
    for(int i=2;i<N;i++)
    {
        if(!mark[i])prime[++cnt]=i,mu[i]=-1;
        for(int j=1;j<=cnt;j++)
        {
            int t=i*prime[j];
            if(t>N)break;
            mark[t]=1;
[n==1] == $\sum_{d|n}μ(d)
$I(n)=1$(常函数)
$\mu(n)$(莫比乌斯函数)
$\phi(n)$(欧拉函数)
$\e(n)=[n==1]$(单位函数)
$id(n)=n$
因为$\sum_{d|n}\mu(d)=[n==1]$,所以$I*\mu=\e$
因为$n=\sum_{d|n}\phi(d)$，所以$I*\phi=id$
\phi=id*\mu
狄利克雷卷积:$(f*g)(n)=\sum_{d|n}f(d)*g(\frac{n}{d})$

积性函数倍数和
$\sum_{i=1}^mf(i*n)=-\sum_{i=1}^mf(i*\frac{n}{d})+\sum_{i=1}^{ \lfloor \frac{m}{d} \rfloor}f(i*n)$
