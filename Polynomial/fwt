#define mod 1000000007
int inv=qp(2,mod-2);
void fwt_or(int *a,int n,int dft)
{
    for(int i=1;i<n;i<<=1)
        for(int j=0;j<n;j+=i<<1)
            for(int k=j;k<j+i;k++)
            {
                if(dft==1)a[i+k]=(a[i+k]+a[k])%mod;
                else a[i+k]=(a[i+k]-a[k]+mod)%mod;
            }
}
void fwt_and(int *a,int n,int dft)
{
    for(int i=1;i<n;i<<=1)
        for(int j=0;j<n;j+=i<<1)
            for(int k=j;k<j+i;k++)
            {
                if(dft==1)a[k]=(a[k]+a[i+k])%mod;
                else a[k]=(a[k]-a[i+k]+mod)%mod;
            }
}
void fwt_xor(int *a,int n,int dft)
{
    for(int i=1;i<n;i<<=1)
        for(int j=0;j<n;j+=i<<1)
            for(int k=j;k<j+i;k++)
            {
                int x=a[k],y=a[i+k];
                a[k]=(x+y)%mod;a[i+k]=(x-y+mod)%mod;
                if(dft==-1)a[k]=a[k]*inv2%mod,a[i+k]=a[i+k]*inv2%mod;
            }
}
//c[k]=Σ(i^j==k)a[i]*b[j];
//c[k]=Σ(i|j==k)a[i]*b[j];
//c[k]=Σ(i&j==k)a[i]*b[j];
