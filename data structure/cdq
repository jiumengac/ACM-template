//求三维偏序O(nloglogn),多维bitset压位暴力
int id[N];
struct node{
    int a,b,c;
    ll ans;
    bool operator <(const node &rhs)const
    {
        return a<rhs.a||a==rhs.a&&b<rhs.b||a==rhs.a&&b==rhs.b&&c<rhs.c;
    }
}p[N];
struct bit{
    int sum[N];
    void update(int i,int v)
    {
        for(;i<N;i+=i&(-i))sum[i]+=v;
    }
    int query(int i)
    {
        int ans=0;
        for(;i;i-=i&(-i))ans+=sum[i];
        return ans;
    }
}b;
bool cmp1(const node &x,const node &y){return x.c<y.c;}
void cdq(int l,int r)
{
    if(l==r)return ;
    int m=(l+r)>>1;
    cdq(l,m);cdq(m+1,r);
    sort(p+l,p+m+1,cmp1);sort(p+m+1,p+r+1,cmp1);
    int le=l,ri=m+1;
    while(ri<=r)
    {
        if(le<=m&&p[le].c<p[ri].c)b.update(p[le].b,1),le++;
        else
        {
            p[ri].ans+=b.query(N-1)-b.query(p[ri].b);
            ri++;
        }
    }
    for(int i=l;i<le;i++)b.update(p[i].b,-1);
    le=m,ri=r;
    while(ri>=m+1)
    {
        if(le>=l&&p[le].c>p[ri].c)b.update(p[le].b,1),le--;
        else
        {
            p[ri].ans+=b.query(p[ri].b);
            ri--;
        }
    }
    for(int i=m;i>le;i--)b.update(p[i].b,-1);
}
