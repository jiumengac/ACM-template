//用12的骨牌覆盖nm的矩阵的方案数
int n,m;
ll dp[2][N];
void solve()
{
    memset(dp,0,sizeof dp);
    int now=0,pre=1;
    dp[now][(1<<m)-1]=1;
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=m;j++)
        {
            swap(now,pre);
            memset(dp[now],0,sizeof dp[now]);
            for(int k=0;k<(1<<m);k++)
            {
                if(j!=1 && (k&(1<<(m-1))) && (!(k&1)))dp[now][((k<<1)^(1<<m))|3]+=dp[pre][k];

                if(i!=1 && !(k&(1<<(m-1))))dp[now][(k<<1)|1]+=dp[pre][k];

                if(k&(1<<(m-1)))dp[now][(k<<1)^(1<<m)]+=dp[pre][k];
            }
        }
    }
    printf("%lld\n",dp[now][(1<<m)-1]);
}
